(define tolerance 0.00001)

(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess n)
    (let ((next (f guess)))
      (display n)
      (display ":")
      (display next)
      (newline)
      (if (close-enough? guess next)
          next
          (try next (+ n 1)))))
  (try first-guess 1))

(define (averaged-fixed-point f first-guess)
  (define (average a b) (/ (+ a b) 2.0))
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess n)
    (let ((next (average (f guess) guess)))
      (display n)
      (display ":")
      (display next)
      (newline)
      (if (close-enough? guess next)
          next
          (try next (+ n 1)))))
  (try first-guess 1))

;(fixed-point cos 1.0)
(display "normal fixed point\n")
(fixed-point (lambda (x) (/ (log 1000.0) (log x))) 1.1)
(display "averaged fixed point\n")
(averaged-fixed-point (lambda (x) (/ (log 1000.0) (log x))) 1.1)
